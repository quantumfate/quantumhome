# Gets variables from all web applications recursively (for Homer and SWAG)
---
- name: Empty the variables (In case the task is called twice)
  set_fact:
    web_services_to_build: []
  when: (web_services_to_build is defined)

- name: "Web Container Roles: Prepare the data for all the webservices hosted as a webservice"
  block:
    - name: Get a list of web containers to be hosted as a web service and displayed by homer
      delegate_to: localhost
      become: false
      find:
        paths: 
          "{{ webservices_paths }}"
        file_type: directory
        excludes: homer
        recurse: no
      register: webservices

    - name: Include all main.yml files for webservices
      include_vars:
        dir: "{{ playbook_dir }}/{{ item.path }}/defaults"
        files_matching: main.yml
        name: "{{ item.path.split('/')[-1] }}"
      with_items: "{{ webservices.files }}"

    - name: Build the key, value pairs that the webservices dictionary consits of
      set_fact:
        web_services_to_build: "{{ web_services_to_build | default({}) | combine({ item.path.split('/')[-1]: { 'role_name': item.path.split('/')[-1], 'path': item.path,  'tag_primary': item.path.split('/')[-1], 'tag_secondary': item.path.split('/')[1], 'logo': '/assets/tools/homer-icons/' + item.path.split('/')[-1] + '.png', 'ip_adress': this_current_var.ip_adress | default(''), 'name': this_current_var.dashboard_name | default(item.path.split('/')[-1] | title), 'url': this_current_var.url | default(''), 'category': this_current_var.homer_category | default ('') } }) }}"
      vars:
        this_current_var: "{{ lookup('vars', item.path.split('/')[-1]) }}"
      with_items: "{{ webservices.files }}"
