# Gets variables from all web applications recursively (for Homer and SWAG)
#
---
- name: Get a list of containers
  delegate_to: localhost
  become: false
  find:
    paths: 
      - "roles/containers/services"
      - "roles/containers/media"
      - "roles/containers/homeautomation"
      - "roles/containers/system"
      - "roles/containers/network"
    file_type: directory
    excludes: "homer"
    recurse: no
  register: containers

- name: Include all main.yml files
  include_vars:
    dir: "{{ playbook_dir }}/{{ item.path }}/defaults"
    files_matching: main.yml
    name: "{{ item.path.split('/')[-1] }}"
  with_items: "{{ containers.files }}"
   
- name: Empty the variables (In case the task is called twice)
  set_fact:
    web_applications: []
  when: web_applications is defined

- name: Populate the dictionary of all containers  
  block:

    - name: Build the key, value pairs that the dictionay consits of
      set_fact:
        this_logo: "'/assets/tools/homer-icons/' + {{ this_current_container }} + '.png'"
        this_ip_adress: "{{ this_current_var }}.ip_address | default('')"
        this_name: "{{ this_current_var }}.dashboard_name | default(item.path.split('/')[-1] | title)"
        this_url: "{{ this_current_var }}.url | default('')"
        this_category: "{{ this_current_var }}.homer_category | default ('')"

    - name: Build the actual dictionary
      set_fact:
        web_applications: "{{ web_applications | default({}) | combine({ this_current_container: {'logo': {{ this_logo }}, 'ip_address': {{ this_ip_adress }}, 'name': {{ this_name }}, 'url' : {{ url }}, 'category': {{ this_category }} } }) }}"
  
  vars:
    this_current_var: "{{ lookup('vars', item.path.split('/')[-1]) }}"
    this_current_container: "item.path.split('/')[-1]"
  with_items: "{{ containers.files }}"

- debug:
    var: web_applications
    verbosity: 1

- name: Get a list of everything else
  delegate_to: localhost
  become: false
  find:
    paths: 
      - "roles/containers/services"
      - "roles/containers/media"
      - "roles/containers/homeautomation"
      - "roles/containers/system"
      - "roles/containers/network"
    file_type: directory
    excludes: "homer"
    recurse: no
  register: containers

- name: Include all default.yml files
  include_vars:
    dir: "{{ playbook_dir }}/{{ item.path }}/defaults"
    files_matching: main.yml
    name: "{{ item.path.split('/')[-1] }}"
  with_items: "{{ containers.files }}"