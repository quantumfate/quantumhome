---
- name: Create the icons folder
  file:
    path: "{{ docker_dir }}/{{ container_name }}/tools/homer-icons"
    state: directory
    mode: 0755
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"


- name: Empty the variables (In case the task is called twice)
  set_fact:
    apps_with_icons: []
  when: apps_with_icons is defined

- name: List the apps with icons
  set_fact:
          apps_with_icons: "{{ apps_with_icons | default([]) + [(item | basename).split('.')[0]] }}"
  with_items: "{{ web_services_to_build }}"

- name: Copy the icons
  copy:
    src: "{{ item }}"
    dest: "{{ docker_dir }}/{{ container_name }}/tools/homer-icons/{{ item | basename }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  when: (item | basename).split('.')[0] in apps_with_icons
  with_fileglob:
    - files/icons/*.png

- name: Copy the logo
  copy:
    src: "{{ my_project_source }}/files/icons/logo.png"
    dest: "{{ docker_dir }}/{{ container_name }}/tools/homer-icons"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Copy the custom stylesheet
  copy:
    src: "files/custom.css"
    dest: "{{ docker_dir }}/{{ container_name }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Generate the Homer config file
  template:
    src: config.yml.j2
    dest: "{{ docker_dir }}/{{ container_name }}/config.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Print the current state of webservices to json
  delegate_to: localhost
  template:
    src: webservices.json.j2
    dest: "{{ playbood_dir }}/resources/webservices.json"
    mode: 0644